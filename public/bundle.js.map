{"version":3,"file":"bundle.js","sources":["../src/point-math.ts","../src/index.ts"],"sourcesContent":["export interface PointData {x: number, y: number}\n\nfunction toString(this: PointData) {\n    return `(${this.x}, ${this.y})`;\n}\n\nexport function subtract<T extends PointData>(p1: T, p2: T) {\n    return {\n        x: p1.x - p2.x,\n        y: p1.y - p2.y,\n        toString\n    };\n}\n\nexport function add<T extends PointData>(p1: T, p2: T) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y,\n        toString\n    };\n}\n\nexport function length<T extends PointData>(p1: T): number {\n    return Math.sqrt(p1.x * p1.x + p1.y * p1.y);\n}\n\nexport function direction<T extends PointData>(p1: T): number {\n    return Math.acos(p1.x / length(p1));\n}\n\nexport function normalized<T extends PointData>(p1: T) {\n    const p1Length = length(p1);\n    return {\n        x: p1.x / p1Length,\n        y: p1.y / p1Length,\n        toString\n    };\n}\n\nexport function average<T extends PointData>(p1: T, p2: T) {\n    return {\n        x: (p1.x + p2.x) / 2,\n        y: (p1.y + p2.y) / 2,\n        toString\n    };\n}\n","import {add} from \"./point-math\";\r\n\r\nconst point1 = {x: 0, y:3};\r\nconst point2 = {x:-3,y: 32};\r\nconst added = add(point1, point2);\r\n\r\nconsole.log(`Webpage loaded! ${Date.now()} and this added is:${added}`);"],"names":["toString","this","x","y","added","p1","p2","console","log","Date","now"],"mappings":"aAEA,SAASA,IACL,MAAO,IAAIC,KAAKC,MAAMD,KAAKE,IAC/B,CCFA,MAEMC,EDWK,CACHF,GAFiCG,ECZ1B,CAACH,EAAG,EAAGC,EAAE,IDcVD,GAFkCI,ECXjC,CAACJ,GAAG,EAAEC,EAAG,KDaHD,EACbC,EAAGE,EAAGF,EAAIG,EAAGH,EACbH,YAJQ,IAAyBK,EAAOC,ECRhDC,QAAQC,IAAI,mBAAmBC,KAAKC,2BAA2BN"}